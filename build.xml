<?xml version="1.0" encoding="UTF-8"?>
<project name="blog" default="build" basedir=".">
    <property name="project.publicdir" value="${project.basedir}/wwwroot"/>

    <property name="scss.input" value="${project.basedir}/styles/main.scss"/>
    <property name="scss.output" value="${project.publicdir}/assets/css/style.css"/>
    <property name="scss.style" value="compressed"/>

    <property name="ftp.host" value="stephencoakley.com"/>
    <property name="ftp.port" value="21"/>
    <property name="ftp.username" value="phing"/>
    <property name="ftp.password" value="EtTHuoEMv4pnM48"/>

    <property name="test.host" value="localhost"/>
    <property name="test.port" value="8080"/>

    <!-- cleans old build files and cache -->
    <target name="clean">
        <echo>Cleaning cache...</echo>
        <delete>
            <fileset dir="${project.basedir}/cache">
                <include name="*"/>
            </fileset>
        </delete>

        <echo>Cleaning old build files...</echo>
        <delete>
            <fileset dir="${project.basedir}">
                <include name="*.buildfile" />
            </fileset>
        </delete>
    </target>

    <target name="fileWatch">
        <mkdir dir="${project.publicdir}/assets/css"/>
        <exec executable="sass" passthru="true" checkreturn="true">
            <arg line="--style ${scss.style}"/>
            <arg value="--no-cache"/>
            <arg value="--trace"/>
            <arg value="--watch"/>

            <arg value="${scss.input}:${scss.output}"/>
        </exec>
    </target>

    <!-- compiles source files and writes deploy info -->
    <target name="build" depends="clean">
        <echo>Compiling SCSS to CSS...</echo>
        <mkdir dir="${project.publicdir}/assets/css"/>
        <exec executable="sass" passthru="true" checkreturn="true">
            <arg line="--style ${scss.style}"/>
            <arg value="--no-cache"/>
            <arg value="--trace"/>

            <arg file="${scss.input}"/>
            <arg file="${scss.output}"/>
        </exec>

        <echo>Writing last commit diff...</echo>
        <exec
            command="git diff-tree --no-commit-id --name-only --diff-filter=ACMRT -r master"
            dir="${project.basedir}"
            output="${project.basedir}/commit-diff.buildfile"/>

        <mkdir dir="${project.basedir}/cache"/>
    </target>

    <!-- deploys a complete build to live site -->
    <target name="deploy" depends="build">
        <echo>Copying build to ${ftp.host}...</echo>

        <ftpdeploy host="${ftp.host}" port="${ftp.port}" username="${ftp.username}" password="${ftp.password}" dir="/" depends="true" mode="binary" passive="true" level="info" rawdatafallback="true">
            <fileset dir="${project.basedir}">
                <include name="articles/**"/>
                <include name="src/**"/>
                <include name="themes/**"/>
                <include name="vendor/**"/>
                <include name="wwwroot/**"/>
                <include name="config.json"/>
            </fileset>
        </ftpdeploy>
    </target>

    <!-- deploys just the last commit to live site -->
    <target name="deployCommit" depends="build">
        <echo>Deploying build diff for last commit to ${ftp.host}...</echo>

        <ftpdeploy host="${ftp.host}" port="${ftp.port}" username="${ftp.username}" password="${ftp.password}" dir="/" mode="binary" passive="true" level="info">
            <fileset dir="${project.basedir}" includesfile="${project.basedir}/commit-diff.buildfile">
                <include name="wwwroot/assets/css/*"/>
                <exclude name="styles/**"/>
                <exclude name="tests/**"/>
                <exclude name="build.xml"/>
                <exclude name="composer.*"/>
                <exclude name="phpunit.xml.dist"/>
            </fileset>
        </ftpdeploy>
    </target>

    <!-- starts a test server -->
    <target name="testServer" depends="build">
        <echo>Starting development server at ${test.host}:${test.port}...</echo>

        <exec executable="php" passthru="true">
            <arg line="-S ${test.host}:${test.port}"/>
            <arg line="-t ${project.publicdir}"/>
        </exec>
    </target>
</project>
